name: Deploying recruit-it-ui

on:
  push:
    branches:
      - dev-environment

env:
  IMAGE_NAME: recruit-it-ui
  IMAGE_TAG: ${{ github.run_id }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build and Push Docker Image to MicroK8s Registry
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          envs: IMAGE_NAME,IMAGE_TAG
          script: |
            # Change to the directory where Dockerfile and deployment.yaml reside
            cd /home/azureuser/hrms/recruit-lt-frontend
            git pull
            echo "IMAGE_NAME: $IMAGE_NAME"
            echo "IMAGE_TAG: $IMAGE_TAG"
            export IMAGE_NAME=${{ env.IMAGE_NAME }}
            export IMAGE_TAG=${{ env.IMAGE_TAG }}
            sudo docker build -t $IMAGE_NAME:$IMAGE_TAG .
            sudo docker tag $IMAGE_NAME:$IMAGE_TAG localhost:32000/$IMAGE_NAME:$IMAGE_TAG
            sudo docker push localhost:32000/$IMAGE_NAME:$IMAGE_TAG

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to MicroK8s
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          envs: IMAGE_NAME,IMAGE_TAG
          script: |
            cd /home/azureuser/hrms/recruit-lt-frontend
            echo "IMAGE_NAME: $IMAGE_NAME"
            echo "IMAGE_TAG: $IMAGE_TAG"
            export IMAGE_TAG=${IMAGE_TAG}
            export IMAGE_NAME=${IMAGE_NAME}
            envsubst < deployment.yaml | microk8s kubectl apply -f -

  cleanup:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup Older Images from MicroK8s Registry
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          envs: IMAGE_NAME
          script: |
            echo "Removing all MicroK8s registry images except localhost:32000/recruit-it-ui:$IMAGE_TAG"
            microk8s ctr images ls | grep localhost:32000 | grep -v "$IMAGE_TAG" | awk '{print $1}' | xargs microk8s ctr images rm
            echo "Removing images from docker"
            sudo docker rmi -f $(sudo docker images -a -q)
