name: Deploying recruit-it-ui

on:
  push:
    branches:
      - dev-environment

env:
  FULL_IMAGE_NAME: recruit-it-ui:${{ github.run_id }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t $FULL_IMAGE_NAME -f Dockerfile .

      - name: Save Docker Image to Tarball
        run: |
          docker save -o recruit-it-ui.tar $FULL_IMAGE_NAME

      - name: Copy Docker Image to VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          source: "recruit-it-ui.tar"
          target: "/home/azureuser/hrms"

      - name: Load Docker Image on VM
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          envs: FULL_IMAGE_NAME
          script: |
            cd /home/azureuser/hrms
            sudo docker load -i recruit-it-ui.tar
            rm recruit-it-ui.tar  # Clean up the tarball after loading

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          envs: FULL_IMAGE_NAME
          script: |
            cd /home/azureuser/hrms
            echo "FULL_IMAGE_NAME: $FULL_IMAGE_NAME"
            sudo FULL_IMAGE_NAME=$FULL_IMAGE_NAME docker compose -f docker-compose.yml up -d

  cleanup:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup Older Images
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          envs: FULL_IMAGE_NAME
          script: |
            echo "Removing unused Docker images except $FULL_IMAGE_NAME"
            sudo docker images -a | grep recruit-it-ui | grep -v "$FULL_IMAGE_NAME" | awk '{print $3}' | xargs -r sudo docker rmi -f
            sudo docker image prune -f  # Remove dangling images
